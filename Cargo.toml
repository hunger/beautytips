# SPDX-License-Identifier: GPL-3.0-or-later
# Copyright (C) 2024 Tobias Hunger <tobias.hunger@gmail.com>

[package]
authors = ["Tobias Hunger <tobias.hunger@gmail.com>"]
edition = "2021"
homepage = "https://github.com/hunger/beautytips"
license = "GPL-3.0-or-later"
repository = "https://github.com/hunger/beautytips"
rust-version = "1.77"
version = "0.1.5"
name = "beautytips"
description = "The beautytips code prettifier"
readme = "README.md"
keywords = ["prettifier", "code", "tool"]
categories = ["command-line-utilities", "development-tools"]

[package.metadata.wix]
upgrade-guid = "A1E05055-A080-4160-9492-98B5BB6D4285"
path-guid = "EDC1F57B-2BD7-4634-AFBA-A158F86360D8"
license = false
eula = false

[lints.clippy]
cargo = "warn"
multiple_crate_versions = { level = "allow", priority = 10 }
complexity = "warn"
correctness = "deny"
pedantic = "warn"
style = "warn"
suspicious = "warn"

[dependencies]
anyhow = { version = "1.0.86" }
async-trait = { version = "0.1.80" }
cargo_toml = { version = "0.20.3" }
clap = { version = "4.5.8", features = ["cargo", "env", "derive"] }
crossterm = { version = "0.28.1", default-features = false, features = [
  "windows",
] }
dirs = { version = "5.0.1" }
futures = { version = "0.3.30" }
glob = { version = "0.3.1", default-features = false }
ignore = { version = "0.4.22" }
serde = { version = "1.0.203", default-features = false, features = ["derive"] }
shell-words = { version = "1.1.0" }
tokio = { version = "1.38.0", features = [
  "macros",
  "rt",
  "rt-multi-thread",
  "process",
  "sync",
  "time",
  "fs",
] }
toml = { version = "0.8.14", features = ["preserve_order"] }
tracing = { version = "0.1.40" }
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

[dev-dependencies]
const_format = "0.2.32"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.19.1"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell", "powershell", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-unknown-linux-gnu", "x86_64-unknown-linux-musl", "x86_64-pc-windows-msvc"]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# Path that installers should place binaries in
install-path = "CARGO_HOME"
